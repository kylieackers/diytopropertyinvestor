[user]
	name = Kylie Ackers
	email = kylie@kylieackers.co.uk
	token = GITPULLS_TOKEN
[merge]
	summary = true
[mergetool]
	keepBackup = true
	prompt = false
[core]
	quotepath = false
	excludesfile = ~/.gitignore
	editor = /usr/local/bin/vim
[branch]
	autosetupmerge = true
	autosetuprebase = always
[color]
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = green
	local = green
	remote = red
[color "diff"]
	meta = red
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = green
	changed = red
	untracked = magenta
[alias]
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	publish = "!git push -u origin $(git branch-name)"
	unpublish = "!git push origin :$(git branch-name)"

	into-staging = "!CURRENT_BRANCH=$(git branch-name); git checkout staging; git pull; git merge --no-ff $CURRENT_BRANCH"
	into-master = "!CURRENT_BRANCH=$(git branch-name); git checkout master; git pull; git merge --no-ff $CURRENT_BRANCH"
	recreate = "!f() { [[ -n $@ ]] && git checkout \"$@\" && git unpublish && git checkout master && git branch -D \"$@\" && git checkout -b \"$@\" && git publish; }; f"
	recreate-staging = "!git recreate staging"

	st = status
	ci = commit
	br = branch
	co = checkout
	pr = pull --rebase
	df = diff
	dc = diff --cached
	lg = log --abbrev-commit --color-words
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	ls = ls-files

	code-review = difftool origin/master...

	# Find changes introduced by a merge:
	# `git merge-log` shows the commits that were introduced in a given merge
	# `git merge-diff` shows the actual changes that were introduced by a given merge
	# Both commands accept an optional commitish; if ommitted, the last merge commit is used

	merge-span = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1$(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"
	merge-log  = "!git log `git merge-span .. $1`"
	merge-diff = "!git diff `git merge-span ... $1`"

	# Show files ignored by git:
	ign = ls-files -o -i --exclude-standard
	switch = !legit switch \"$@\"
	branches = !legit branches
	sprout = !legit sprout \"$@\"
	harvest = !legit harvest \"$@\"
	sync = !legit sync \"$@\"
	graft = !legit graft \"$@\"
	conflicts = !git ls-files -u | cut -f 2 | sort -u
[credential]
	helper = osxkeychain
[push]
	default = tracking
[diff]
	tool = Kaleidoscope
[merge]
	tool = Kaleidoscope
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
